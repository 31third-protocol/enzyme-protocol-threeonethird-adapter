{"author":"Melonport AG <team@melonport.com>","title":"Backup Owned Contract","fileName":"/./src/dependencies/BackupOwned.sol","name":"BackupOwned","abi":[{"constant":true,"inputs":[],"name":"backupOwner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"ofNewBackupOwner","type":"address"}],"name":"useBackup","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"ofNewBackupOwner","type":"address"}],"name":"setNewBackup","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"inputs":[{"name":"ofBackupOwner","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"bin":"6060604052341561000f57600080fd5b60405160208061052d83398101604052808051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610471806100bc6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633af8e4ab1461005e5780638da5cb5b146100b35780639649dccd14610108578063a07b762e1461014157600080fd5b341561006957600080fd5b61007161017a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100be57600080fd5b6100c66101a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011357600080fd5b61013f600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c5565b005b341561014c57600080fd5b610178600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610297565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101cd610319565b8015156101d957600080fd5b6101e282610371565b8015156101ee57600080fd5b6101f6610394565b80156102075750610206836103eb565b5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080151561029157fe5b50505050565b61029f610394565b8015156102ab57600080fd5b6102b482610371565b8015156102c057600080fd5b6102c9836103eb565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080151561031357fe5b50505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000808273ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60008173ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161490509190505600a165627a7a72305820607b6b15545c3ad94f1ddedebe4fb8dad8b9c6c1da9b2a99af95219f6a2ffceb0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x52D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x471 DUP1 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3AF8E4AB EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0x9649DCCD EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xA07B762E EQ PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71 PUSH2 0x17A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x178 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x297 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1CD PUSH2 0x319 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E2 DUP3 PUSH2 0x371 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x1EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F6 PUSH2 0x394 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x207 JUMPI POP PUSH2 0x206 DUP4 PUSH2 0x3EB JUMP JUMPDEST JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO ISZERO PUSH2 0x291 JUMPI INVALID JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x29F PUSH2 0x394 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B4 DUP3 PUSH2 0x371 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C9 DUP4 PUSH2 0x3EB JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 ISZERO ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH1 0x7B PUSH12 0x15545C3AD94F1DDEDEBE4FB8 0xda 0xd8 0xb9 0xc6 0xc1 0xda SWAP12 0x2a SWAP10 0xaf SWAP6 0x21 SWAP16 PUSH11 0x2FFCEB0029000000000000 ","source":"pragma solidity ^0.4.11;\n\nimport './DBC.sol';\nimport './Owned.sol';\n\n/// @title Backup Owned Contract\n/// @author Melonport AG <team@melonport.com>\n/// @notice Specifies an Owner as well as a secondary or backup Owner which can change owner\ncontract BackupOwned is DBC, Owned {\n\n    // FIELDS\n\n    // Constructor fields\n    address public backupOwner;\n\n    // PRE, POST, INVARIANT CONDITIONS\n\n    function isBackupOwner() internal returns (bool) { return msg.sender == backupOwner; }\n    function backupOwnerIs(address x) internal returns (bool) { return backupOwner == x; }\n    function isNotNullAddress(address x) internal returns (bool) { return x != 0; }\n\n    // NON-CONSTANT METHODS\n\n    function BackupOwned(address ofBackupOwner)\n        Owned()\n    {\n        backupOwner = ofBackupOwner;\n    }\n\n    /// @dev Pre: Only Backup Owner; Non-null new Backup Owner\n    /// @dev Post Swaps backup Owner to Owner and new backup Owner to backup Owner\n    function useBackup(address ofNewBackupOwner)\n        pre_cond(isBackupOwner())\n        pre_cond(isNotNullAddress(ofNewBackupOwner))\n        post_cond(isOwner() && backupOwnerIs(ofNewBackupOwner))\n    {\n        owner = msg.sender;\n        backupOwner = ofNewBackupOwner;\n    }\n\n    /// @dev Pre: Only Owner; Non-null new Backup Owner\n    /// @dev Post New backup Owner\n    function setNewBackup(address ofNewBackupOwner)\n        pre_cond(isOwner())\n        pre_cond(isNotNullAddress(ofNewBackupOwner))\n        post_cond(backupOwnerIs(ofNewBackupOwner))\n    {\n        backupOwner = ofNewBackupOwner;\n    }\n\n}\n","abiDocs":[{"constant":true,"inputs":[],"name":"backupOwner","payable":false,"stateMutability":"view","type":"function","signature":"backupOwner()","signatureHash":"3af8e4ab"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"ofNewBackupOwner","type":"address"}],"name":"useBackup","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Pre: Only Backup Owner; Non-null new Backup OwnerPost Swaps backup Owner to Owner and new backup Owner to backup Owner","signature":"useBackup(address)","signatureHash":"9649dccd"},{"constant":false,"inputs":[{"name":"ofNewBackupOwner","type":"address"}],"name":"setNewBackup","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Pre: Only Owner; Non-null new Backup OwnerPost New backup Owner","signature":"setNewBackup(address)","signatureHash":"a07b762e"},{"inputs":[{"name":"ofBackupOwner","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}

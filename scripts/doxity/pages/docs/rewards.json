{"fileName":"/./src/libraries/rewards.sol","name":"rewards","abi":[{"constant":true,"inputs":[{"name":"performanceRewardRate","type":"uint256"},{"name":"deltaPrice","type":"int256"},{"name":"totalSupply","type":"uint256"},{"name":"divisorFee","type":"uint256"}],"name":"performanceReward","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"managementRewardRate","type":"uint256"},{"name":"timeDifference","type":"uint256"},{"name":"gav","type":"uint256"},{"name":"divisorFee","type":"uint256"}],"name":"managementReward","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"bin":"6060604052341561000f57600080fd5b6101618061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632ddea38914610051578063ed64702514610098575b600080fd5b61008260048080359060200190919080359060200190919080359060200190919080359060200190919050506100df565b6040518082815260200191505060405180910390f35b6100c96004808035906020019091908035906020019091908035906020019091908035906020019091905050610114565b6040518082815260200191505060405180910390f35b6000806000851315156100f5576000915061010b565b83850290508286820281151561010757fe5b0491505b50949350505050565b60008083850290508286820281151561012957fe5b049150509493505050505600a165627a7a723058201c3ec92a715524cf2fbd5c9307fbfac698347514b20065f07255eafb7489de050029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x161 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x2DDEA389 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xED647025 EQ PUSH2 0x98 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 SGT ISZERO ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 SWAP2 POP PUSH2 0x10B JUMP JUMPDEST DUP4 DUP6 MUL SWAP1 POP DUP3 DUP7 DUP3 MUL DUP2 ISZERO ISZERO PUSH2 0x107 JUMPI INVALID JUMPDEST DIV SWAP2 POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP6 MUL SWAP1 POP DUP3 DUP7 DUP3 MUL DUP2 ISZERO ISZERO PUSH2 0x129 JUMPI INVALID JUMPDEST DIV SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1c RETURNDATACOPY 0xc9 0x2a PUSH18 0x5524CF2FBD5C9307FBFAC698347514B20065 CREATE PUSH19 0x55EAFB7489DE05002900000000000000000000 ","source":"pragma solidity ^0.4.17;\n\n// Fully functional calculation library\nlibrary rewards {\n\n    // CONSTANT METHODS\n\n    /* Function invariant\n     *  for timeDifference == 0 => returns 0\n     */\n    /// @dev Post Reward denominated in referenceAsset\n    function managementReward(\n        uint managementRewardRate,\n        uint timeDifference,\n        uint gav,\n        uint divisorFee\n    )\n        constant\n        returns (uint)\n    {\n        uint absoluteChange = timeDifference * gav;\n        return absoluteChange * managementRewardRate / divisorFee;\n    }\n\n    /* Function invariant\n     *  for deltaDifference == 0 => returns 0\n     */\n    /// @dev Post Reward denominated in referenceAsset\n    function performanceReward(\n        uint performanceRewardRate,\n        int deltaPrice, // Price Difference measured agains referenceAsset\n        uint totalSupply,\n        uint divisorFee\n    )\n        constant\n        returns (uint)\n    {\n        if (deltaPrice <= 0) return 0;\n        uint absoluteChange = uint(deltaPrice) * totalSupply;\n        return absoluteChange * performanceRewardRate / divisorFee;\n    }\n}\n","abiDocs":[{"constant":true,"inputs":[{"name":"performanceRewardRate","type":"uint256"},{"name":"deltaPrice","type":"int256"},{"name":"totalSupply","type":"uint256"},{"name":"divisorFee","type":"uint256"}],"name":"performanceReward","payable":false,"stateMutability":"view","type":"function","details":"Post Reward denominated in referenceAsset","signature":"performanceReward(uint256,int256,uint256,uint256)","signatureHash":"2ddea389"},{"constant":true,"inputs":[{"name":"managementRewardRate","type":"uint256"},{"name":"timeDifference","type":"uint256"},{"name":"gav","type":"uint256"},{"name":"divisorFee","type":"uint256"}],"name":"managementReward","payable":false,"stateMutability":"view","type":"function","details":"Post Reward denominated in referenceAsset","signature":"managementReward(uint256,uint256,uint256,uint256)","signatureHash":"ed647025"}]}

{"author":"Melonport AG <team@melonport.com>","title":"Risk Management Make Orders Contract","fileName":"/./src/riskmgmt/RMMakeOrders.sol","name":"RMMakeOrders","abi":[{"constant":true,"inputs":[],"name":"RISK_LEVEL","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isMakePermitted","outputs":[{"name":"isPermitted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isTakePermitted","outputs":[{"name":"isPermitted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"RISK_DIVISOR","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}],"bin":"6060604052341561000f57600080fd5b6102838061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063230a14c01461005e57806371ad3e731461008757806380603faa1461011b5780639460977a146101af57600080fd5b341561006957600080fd5b6100716101d8565b6040518082815260200191505060405180910390f35b341561009257600080fd5b610101600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190919050506101dd565b604051808215151515815260200191505060405180910390f35b341561012657600080fd5b610195600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610217565b604051808215151515815260200191505060405180910390f35b34156101ba57600080fd5b6101c2610251565b6040518082815260200191505060405180910390f35b60c881565b600061271060c88115156101ed57fe5b04868888038115156101fb57fe5b0411151561020c576001905061020d565b5b9695505050505050565b600061271060c881151561022757fe5b048687890381151561023557fe5b041115156102465760019050610247565b5b9695505050505050565b612710815600a165627a7a72305820aac5c1b44e6ea9c3c8336186901b88894e12f05bc0b45b853fefad2a617fb3a40029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x283 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x230A14C0 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0x71AD3E73 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x80603FAA EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x9460977A EQ PUSH2 0x1AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71 PUSH2 0x1D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x101 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C2 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0xC8 DUP2 ISZERO ISZERO PUSH2 0x1ED JUMPI INVALID JUMPDEST DIV DUP7 DUP9 DUP9 SUB DUP2 ISZERO ISZERO PUSH2 0x1FB JUMPI INVALID JUMPDEST DIV GT ISZERO ISZERO PUSH2 0x20C JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x20D JUMP JUMPDEST JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0xC8 DUP2 ISZERO ISZERO PUSH2 0x227 JUMPI INVALID JUMPDEST DIV DUP7 DUP8 DUP10 SUB DUP2 ISZERO ISZERO PUSH2 0x235 JUMPI INVALID JUMPDEST DIV GT ISZERO ISZERO PUSH2 0x246 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x247 JUMP JUMPDEST JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xaa 0xc5 0xc1 0xb4 0x4e PUSH15 0xA9C3C8336186901B88894E12F05BC0 0xb4 JUMPDEST DUP6 0x3f 0xef 0xad 0x2a PUSH2 0x7FB3 LOG4 STOP 0x29 ","source":"pragma solidity ^0.4.11;\n\nimport '../dependencies/ERC20.sol';\nimport './RiskMgmtInterface.sol';\n\n/// @title Risk Management Make Orders Contract\n/// @author Melonport AG <team@melonport.com>\ncontract RMMakeOrders is RiskMgmtInterface {\n\n      // FIELDS\n\n      uint public constant RISK_LEVEL = 200; // Allows 2 percent deviation from referencePrice\n      uint public constant RISK_DIVISOR = 10000;\n\n      // PRE, POST, INVARIANT CONDITIONS\n\n      function isLessOrEqualThan(uint256 x, uint256 y) internal returns (bool) { return x <= y; }\n\n      // NON-CONSTANT METHODS\n\n      /// @notice Checks if the makeOrder price is within maximum allowed deviation from reference price\n      /// @param orderPrice Price of Order\n      /// @param referencePrice Reference price obtained through DataFeed contract\n      /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n      /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n      /// @param sellQuantity Quantity of sellAsset to be sold\n      /// @param buyQuantity Quantity of buyAsset to be bought\n      /// @return isPermitted If makeOrder is permitted\n      function isMakePermitted(\n          uint orderPrice,\n          uint referencePrice,\n          address sellAsset,\n          address buyAsset,\n          uint sellQuantity,\n          uint buyQuantity\n      )\n          returns (bool isPermitted)\n      {\n          // Makes sure orderPrice is less than or equal to maximum allowed deviation from reference price\n          if(((referencePrice - orderPrice) / referencePrice) <= RISK_LEVEL / RISK_DIVISOR) {\n              return true;\n          }\n          // return true;\n      }\n\n      /// @notice Checks if the takeOrder price is within maximum allowed deviation from reference price\n      /// @param orderPrice Price of Order\n      /// @param referencePrice Reference price obtained through DataFeed contract\n      /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n      /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n      /// @param sellQuantity Quantity of sellAsset to be sold\n      /// @param buyQuantity Quantity of buyAsset to be bought\n      /// @return isPermitted If takeOrder is permitted\n      function isTakePermitted(\n          uint orderPrice,\n          uint referencePrice,\n          address sellAsset,\n          address buyAsset,\n          uint sellQuantity,\n          uint buyQuantity\n      )\n          returns (bool isPermitted)\n      {\n          // Makes sure orderPrice is less than or equal to maximum allowed deviation from reference price\n          if(((orderPrice - referencePrice) / referencePrice) <= RISK_LEVEL / RISK_DIVISOR) {\n              return true;\n          }\n          //return true;\n      }\n}\n","abiDocs":[{"constant":true,"inputs":[],"name":"RISK_LEVEL","payable":false,"stateMutability":"view","type":"function","signature":"RISK_LEVEL()","signatureHash":"230a14c0"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through DataFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isMakePermitted","outputs":[{"name":"isPermitted","type":"bool","description":"If makeOrder is permitted"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isPermitted If makeOrder is permitted","notice":"Checks if the makeOrder price is within maximum allowed deviation from reference price","signature":"isMakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"71ad3e73"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through DataFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isTakePermitted","outputs":[{"name":"isPermitted","type":"bool","description":"If takeOrder is permitted"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isPermitted If takeOrder is permitted","notice":"Checks if the takeOrder price is within maximum allowed deviation from reference price","signature":"isTakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"80603faa"},{"constant":true,"inputs":[],"name":"RISK_DIVISOR","payable":false,"stateMutability":"view","type":"function","signature":"RISK_DIVISOR()","signatureHash":"9460977a"}]}

{"author":"Melonport AG <team@melonport.com>","title":"Risk Management Make Orders Contract","fileName":"/./src/riskmgmt/RMMakeOrders.sol","name":"RMMakeOrders","abi":[{"constant":true,"inputs":[],"name":"RISK_LEVEL","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isMakePermitted","outputs":[{"name":"isPermitted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isTakePermitted","outputs":[{"name":"isPermitted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bin":"6060604052341561000f57600080fd5b6102fd8061001e6000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063230a14c01461005c57806371ad3e731461008557806380603faa14610119575b600080fd5b341561006757600080fd5b61006f6101ad565b6040518082815260200191505060405180910390f35b341561009057600080fd5b6100ff600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190919050506101b5565b604051808215151515815260200191505060405180910390f35b341561012457600080fd5b610193600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919080359060200190919050506101ed565b604051808215151515815260200191505060405180910390f35b6011600a0a81565b60006101ce866101c96011600a0a89610225565b610269565b8710156101de57600090506101e3565b600190505b9695505050505050565b6000610206866102016011600a0a89610225565b610269565b871015610216576000905061021b565b600190505b9695505050505050565b6000670de0b6b3a764000061025761023d8585610285565b6002670de0b6b3a764000081151561025157fe5b046102b5565b81151561026057fe5b04905092915050565b6000828284039150811115151561027f57600080fd5b92915050565b6000808214806102a4575082828385029250828115156102a157fe5b04145b15156102af57600080fd5b92915050565b600082828401915081101515156102cb57600080fd5b929150505600a165627a7a72305820496e904f9a4c23e33e3cba4547f5e243e05c17a6a2c9f15594bd95109276ce7d0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FD DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x230A14C0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x71AD3E73 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x80603FAA EQ PUSH2 0x119 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x1AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFF PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x124 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x11 PUSH1 0xA EXP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE DUP7 PUSH2 0x1C9 PUSH1 0x11 PUSH1 0xA EXP DUP10 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST DUP8 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206 DUP7 PUSH2 0x201 PUSH1 0x11 PUSH1 0xA EXP DUP10 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x269 JUMP JUMPDEST DUP8 LT ISZERO PUSH2 0x216 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x21B JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x257 PUSH2 0x23D DUP6 DUP6 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 DUP2 ISZERO ISZERO PUSH2 0x251 JUMPI INVALID JUMPDEST DIV PUSH2 0x2B5 JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0x260 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 SUB SWAP2 POP DUP2 GT ISZERO ISZERO ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x2A4 JUMPI POP DUP3 DUP3 DUP4 DUP6 MUL SWAP3 POP DUP3 DUP2 ISZERO ISZERO PUSH2 0x2A1 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST ISZERO ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP5 ADD SWAP2 POP DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x2CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x49 PUSH15 0x904F9A4C23E33E3CBA4547F5E243E0 0x5c OR 0xa6 LOG2 0xc9 CALL SSTORE SWAP5 0xbd SWAP6 LT SWAP3 PUSH23 0xCE7D002900000000000000000000000000000000000000 ","source":"pragma solidity ^0.4.19;\n\nimport '../temp/math.sol';\nimport '../assets/Asset.sol';\nimport './RiskMgmtInterface.sol';\n\n/// @title Risk Management Make Orders Contract\n/// @author Melonport AG <team@melonport.com>\ncontract RMMakeOrders is DSMath, RiskMgmtInterface {\n\n      // FIELDS\n\n      uint public constant RISK_LEVEL = 10 ** uint256(17); // Allows 10 percent deviation from referencePrice; 10 percent is expressed as 0.1 * 10 ** 18\n\n      // NON-CONSTANT METHODS\n\n      /// @notice Checks if the makeOrder price is within maximum allowed deviation from reference price\n      /// @param orderPrice Price of Order\n      /// @param referencePrice Reference price obtained through PriceFeed contract\n      /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n      /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n      /// @param sellQuantity Quantity of sellAsset to be sold\n      /// @param buyQuantity Quantity of buyAsset to be bought\n      /// @return isPermitted If makeOrder is permitted\n      function isMakePermitted(\n          uint orderPrice,\n          uint referencePrice,\n          address sellAsset,\n          address buyAsset,\n          uint sellQuantity,\n          uint buyQuantity\n      )\n          returns (bool isPermitted)\n      {\n          // Makes sure difference between orderPrice and referencePrice is less than or equal to maximum allowed deviation\n          if (orderPrice < sub(referencePrice, wmul(RISK_LEVEL, referencePrice))) {\n              return false;\n          }\n          return true;\n      }\n\n      /// @notice Checks if the takeOrder price is within maximum allowed deviation from reference price\n      /// @param orderPrice Price of Order\n      /// @param referencePrice Reference price obtained through PriceFeed contract\n      /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n      /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n      /// @param sellQuantity Quantity of sellAsset to be sold\n      /// @param buyQuantity Quantity of buyAsset to be bought\n      /// @return isPermitted If takeOrder is permitted\n      function isTakePermitted(\n          uint orderPrice,\n          uint referencePrice,\n          address sellAsset,\n          address buyAsset,\n          uint sellQuantity,\n          uint buyQuantity\n      )\n          returns (bool isPermitted)\n      {\n          // Makes sure difference between orderPrice and referencePrice is less than or equal to maximum allowed deviation\n          if (orderPrice < sub(referencePrice, wmul(RISK_LEVEL, referencePrice))) {\n              return false;\n          }\n          return true;\n      }\n}\n","abiDocs":[{"constant":true,"inputs":[],"name":"RISK_LEVEL","payable":false,"stateMutability":"view","type":"function","signature":"RISK_LEVEL()","signatureHash":"230a14c0"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through PriceFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isMakePermitted","outputs":[{"name":"isPermitted","type":"bool","description":"If makeOrder is permitted"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isPermitted If makeOrder is permitted","notice":"Checks if the makeOrder price is within maximum allowed deviation from reference price","signature":"isMakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"71ad3e73"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through PriceFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isTakePermitted","outputs":[{"name":"isPermitted","type":"bool","description":"If takeOrder is permitted"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isPermitted If takeOrder is permitted","notice":"Checks if the takeOrder price is within maximum allowed deviation from reference price","signature":"isTakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"80603faa"}]}

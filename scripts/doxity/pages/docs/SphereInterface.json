{"author":"Melonport AG <team@melonport.com>","title":"Sphere Interface Contract","fileName":"/./src/sphere/SphereInterface.sol","name":"SphereInterface","abi":[{"constant":true,"inputs":[],"name":"getExchangeAdapter","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getDataFeed","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"ofSubSet","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getExchange","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"}],"bin":"6060604052341561000f57600080fd5b6101c68061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806352cf55341461005e578063a8b121df146100b3578063cd87448f14610108578063f807cd221461013157600080fd5b341561006957600080fd5b610071610186565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100be57600080fd5b6100c661018b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011357600080fd5b61011b610190565b6040518082815260200191505060405180910390f35b341561013c57600080fd5b610144610195565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600090565b600090565b600090565b6000905600a165627a7a7230582056e125ed8867a5e84d2926a593721e2999ee596aac59d71008155fcdcd691ca80029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C6 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x52CF5534 EQ PUSH2 0x5E JUMPI DUP1 PUSH4 0xA8B121DF EQ PUSH2 0xB3 JUMPI DUP1 PUSH4 0xCD87448F EQ PUSH2 0x108 JUMPI DUP1 PUSH4 0xF807CD22 EQ PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x113 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11B PUSH2 0x190 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 JUMP 0xe1 0x25 0xed DUP9 PUSH8 0xA5E84D2926A59372 0x1e 0x29 SWAP10 0xee MSIZE PUSH11 0xAC59D71008155FCDCD691C 0xa8 STOP 0x29 ","source":"pragma solidity ^0.4.11;\n\n/// @title Sphere Interface Contract\n/// @author Melonport AG <team@melonport.com>\n/// @notice This is to be considered as an interface on how to access the underlying Sphere Contract\ncontract SphereInterface {\n\n    // CONSTANT METHODS\n\n    function getDataFeed() external constant returns (address) {}\n    function getExchange() external constant returns (address) {}\n    function getExchangeAdapter() external constant returns (address) {}\n    function ofSubSet() external constant returns (uint) {}\n}\n","abiDocs":[{"constant":true,"inputs":[],"name":"getExchangeAdapter","payable":false,"stateMutability":"view","type":"function","signature":"getExchangeAdapter()","signatureHash":"52cf5534"},{"constant":true,"inputs":[],"name":"getDataFeed","payable":false,"stateMutability":"view","type":"function","signature":"getDataFeed()","signatureHash":"a8b121df"},{"constant":true,"inputs":[],"name":"ofSubSet","payable":false,"stateMutability":"view","type":"function","signature":"ofSubSet()","signatureHash":"cd87448f"},{"constant":true,"inputs":[],"name":"getExchange","payable":false,"stateMutability":"view","type":"function","signature":"getExchange()","signatureHash":"f807cd22"}]}

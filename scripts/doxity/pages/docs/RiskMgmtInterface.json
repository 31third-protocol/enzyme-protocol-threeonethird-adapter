{"author":"Melonport AG <team@melonport.com>","title":"Risk Management Interface Contract","fileName":"/./src/riskmgmt/RiskMgmtInterface.sol","name":"RiskMgmtInterface","abi":[{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isMakePermitted","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isTakePermitted","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bin":"6060604052341561000f57600080fd5b6101b48061001e6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806371ad3e731461004857806380603faa146100dc57600080fd5b341561005357600080fd5b6100c2600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610170565b604051808215151515815260200191505060405180910390f35b34156100e757600080fd5b610156600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190505061017c565b604051808215151515815260200191505060405180910390f35b60009695505050505050565b600096955050505050505600a165627a7a72305820d9d0177bd7a912902d44c9f97eef7466d75d8b31de339ddc1bc8b8c90e461b2a0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B4 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x71AD3E73 EQ PUSH2 0x48 JUMPI DUP1 PUSH4 0x80603FAA EQ PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC2 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x170 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x17C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd9 0xd0 OR PUSH28 0xD7A912902D44C9F97EEF7466D75D8B31DE339DDC1BC8B8C90E461B2A STOP 0x29 ","source":"pragma solidity ^0.4.11;\n\n/// @title Risk Management Interface Contract\n/// @author Melonport AG <team@melonport.com>\n/// @notice This is to be considered as an interface on how to access the underlying RiskMgmt Contract\n/* Remark: Checks for:\n *  1) Liquidity: All positions have to be fairly simple to liquidate.\n *    E.g. Cap at percentage of 30 day average trading volume of this pair\n *  2) Market Impact: If w/in above liquidity restrictions, trade size also\n *    restricted to have market impact below certain threshold\n *  3) Best execution: Ensure the best execution possible for Melon fund\n *    investors' orders.\n */\ncontract RiskMgmtInterface {\n\n    /// @notice Checks if the makeOrder price is reasonable and not manipulative\n    /// @param orderPrice Price of Order\n    /// @param referencePrice Reference price obtained through DataFeed contract\n    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n    /// @param sellQuantity Quantity of sellAsset to be sold\n    /// @param buyQuantity Quantity of buyAsset to be bought\n    /// @return If makeOrder is permitted\n    function isMakePermitted(\n        uint orderPrice,\n        uint referencePrice,\n        address sellAsset,\n        address buyAsset,\n        uint sellQuantity,\n        uint buyQuantity\n    ) returns (bool) {}\n\n    /// @notice Checks if the takeOrder price is reasonable and not manipulative\n    /// @param orderPrice Price of Order\n    /// @param referencePrice Reference price obtained through DataFeed contract\n    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n    /// @param sellQuantity Quantity of sellAsset to be sold\n    /// @param buyQuantity Quantity of buyAsset to be bought\n    /// @return If takeOrder is permitted\n    function isTakePermitted(\n        uint orderPrice,\n        uint referencePrice,\n        address sellAsset,\n        address buyAsset,\n        uint sellQuantity,\n        uint buyQuantity\n    ) returns (bool) {}\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through DataFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isMakePermitted","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"If makeOrder is permitted","notice":"Checks if the makeOrder price is reasonable and not manipulative","signature":"isMakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"71ad3e73"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through DataFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isTakePermitted","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"If takeOrder is permitted","notice":"Checks if the takeOrder price is reasonable and not manipulative","signature":"isTakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"80603faa"}]}

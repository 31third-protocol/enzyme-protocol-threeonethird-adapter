{"author":"Melonport AG <team@melonport.com>","title":"Risk Management Interface Contract","fileName":"/./src/riskmgmt/RiskMgmtInterface.sol","name":"RiskMgmtInterface","abi":[{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isMakePermitted","outputs":[{"name":"isPermitted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256"},{"name":"referencePrice","type":"uint256"},{"name":"sellAsset","type":"address"},{"name":"buyAsset","type":"address"},{"name":"sellQuantity","type":"uint256"},{"name":"buyQuantity","type":"uint256"}],"name":"isTakePermitted","outputs":[{"name":"isPermitted","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"bin":"6060604052341561000f57600080fd5b6101bd8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806371ad3e731461005157806380603faa146100e5575b600080fd5b341561005c57600080fd5b6100cb600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610179565b604051808215151515815260200191505060405180910390f35b34156100f057600080fd5b61015f600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610185565b604051808215151515815260200191505060405180910390f35b60009695505050505050565b600096955050505050505600a165627a7a72305820da5f30c20798173c6bbbe510ed3b725213f0534ef1f26a7d316248c3f2a154b30029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BD DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x71AD3E73 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x80603FAA EQ PUSH2 0xE5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCB PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP7 SWAP6 POP POP POP POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xda 0x5f ADDRESS 0xc2 SMOD SWAP9 OR EXTCODECOPY PUSH12 0xBBE510ED3B725213F0534EF1 CALLCODE PUSH11 0x7D316248C3F2A154B30029 ","source":"pragma solidity ^0.4.19;\n\n/// @title Risk Management Interface Contract\n/// @author Melonport AG <team@melonport.com>\n/// @notice This is to be considered as an interface on how to access the underlying RiskMgmt Contract\n/* Remark: Checks for:\n *  1) Liquidity: All positions have to be fairly simple to liquidate.\n *    E.g. Cap at percentage of 30 day average trading volume of this pair\n *  2) Market Impact: If w/in above liquidity restrictions, trade size also\n *    restricted to have market impact below certain threshold\n *  3) Best execution: Ensure the best execution possible for Melon fund\n *    investors' orders.\n */\ncontract RiskMgmtInterface {\n\n    /// @notice Checks if the makeOrder price is reasonable and not manipulative\n    /// @param orderPrice Price of Order\n    /// @param referencePrice Reference price obtained through PriceFeed contract\n    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n    /// @param sellQuantity Quantity of sellAsset to be sold\n    /// @param buyQuantity Quantity of buyAsset to be bought\n    /// @return isPermitted If makeOrder is permitted\n    function isMakePermitted(\n        uint orderPrice,\n        uint referencePrice,\n        address sellAsset,\n        address buyAsset,\n        uint sellQuantity,\n        uint buyQuantity\n    ) returns (bool isPermitted) {}\n\n    /// @notice Checks if the takeOrder price is reasonable and not manipulative\n    /// @param orderPrice Price of Order\n    /// @param referencePrice Reference price obtained through PriceFeed contract\n    /// @param sellAsset Asset (as registered in Asset registrar) to be sold\n    /// @param buyAsset Asset (as registered in Asset registrar) to be bought\n    /// @param sellQuantity Quantity of sellAsset to be sold\n    /// @param buyQuantity Quantity of buyAsset to be bought\n    /// @return isPermitted If takeOrder is permitted\n    function isTakePermitted(\n        uint orderPrice,\n        uint referencePrice,\n        address sellAsset,\n        address buyAsset,\n        uint sellQuantity,\n        uint buyQuantity\n    ) returns (bool isPermitted) {}\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through PriceFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isMakePermitted","outputs":[{"name":"isPermitted","type":"bool","description":"If makeOrder is permitted"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isPermitted If makeOrder is permitted","notice":"Checks if the makeOrder price is reasonable and not manipulative","signature":"isMakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"71ad3e73"},{"constant":false,"inputs":[{"name":"orderPrice","type":"uint256","description":"Price of Order"},{"name":"referencePrice","type":"uint256","description":"Reference price obtained through PriceFeed contract"},{"name":"sellAsset","type":"address","description":"Asset (as registered in Asset registrar) to be sold"},{"name":"buyAsset","type":"address","description":"Asset (as registered in Asset registrar) to be bought"},{"name":"sellQuantity","type":"uint256","description":"Quantity of sellAsset to be sold"},{"name":"buyQuantity","type":"uint256","description":"Quantity of buyAsset to be bought"}],"name":"isTakePermitted","outputs":[{"name":"isPermitted","type":"bool","description":"If takeOrder is permitted"}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isPermitted If takeOrder is permitted","notice":"Checks if the takeOrder price is reasonable and not manipulative","signature":"isTakePermitted(uint256,uint256,address,address,uint256,uint256)","signatureHash":"80603faa"}]}

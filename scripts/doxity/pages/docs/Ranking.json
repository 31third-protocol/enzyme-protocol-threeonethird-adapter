{"author":"Melonport AG <team@melonport.com>","title":"Ranking Contract","fileName":"/./src/Ranking.sol","name":"Ranking","abi":[{"constant":true,"inputs":[],"name":"getFundsSharePrices","outputs":[{"name":"fundAddresses","type":"address[1024]"},{"name":"fundSharePrices","type":"uint256[1024]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"ofVersion","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}],"bin":"6060604052341561000f57600080fd5b60405160208061046683398101604052808051906020019091905050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506103eb8061007b6000396000f300606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806358df637814610046575b600080fd5b341561005157600080fd5b6100596100c8565b604051808361040060200280838360005b8381101561008557808201518184015260208101905061006a565b505050509050018261040060200280838360005b838110156100b4578082015181840152602081019050610099565b505050509050019250505060405180910390f35b6100d0610355565b6100d8610395565b60008060008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166328e68ebe6000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561016d57600080fd5b6102c65a03f1151561017e57600080fd5b505050604051805190509450600093505b8484111515610346576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663149e685a856000604051602001526040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180828152602001915050602060405180830381600087803b151561023057600080fd5b6102c65a03f1151561024157600080fd5b5050506040518051905092508291508173ffffffffffffffffffffffffffffffffffffffff16639489fa846000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15156102bc57600080fd5b6102c65a03f115156102cd57600080fd5b505050604051805190509050828785610400811015156102e957fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508086856104008110151561033057fe5b602002018181525050838060010194505061018f565b86869650965050505050509091565b61800060405190810160405280610400905b600073ffffffffffffffffffffffffffffffffffffffff168152602001906001900390816103675790505090565b61800060405190810160405280610400905b60008152602001906001900390816103a757905050905600a165627a7a7230582005ea25156087ec90dc501696c379d1920d5499dfa92bfe8b23ac7def87493aae0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x466 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x3EB DUP1 PUSH2 0x7B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x58DF6378 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 PUSH2 0x400 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x85 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6A JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD DUP3 PUSH2 0x400 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB4 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x99 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0x355 JUMP JUMPDEST PUSH2 0xD8 PUSH2 0x395 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x28E68EBE PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x17E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST DUP5 DUP5 GT ISZERO ISZERO PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x149E685A DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP3 POP DUP3 SWAP2 POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9489FA84 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C6 GAS SUB CALL ISZERO ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP DUP3 DUP8 DUP6 PUSH2 0x400 DUP2 LT ISZERO ISZERO PUSH2 0x2E9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 DUP7 DUP6 PUSH2 0x400 DUP2 LT ISZERO ISZERO PUSH2 0x330 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0x18F JUMP JUMPDEST DUP7 DUP7 SWAP7 POP SWAP7 POP POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x8000 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x400 SWAP1 JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x367 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x8000 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x400 SWAP1 JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3A7 JUMPI SWAP1 POP POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SDIV 0xea 0x25 ISZERO PUSH1 0x87 0xec SWAP1 0xdc POP AND SWAP7 0xc3 PUSH26 0xD1920D5499DFA92BFE8B23AC7DEF87493AAE0029000000000000 ","source":"pragma solidity ^0.4.17;\n\nimport \"./FundInterface.sol\";\nimport \"./version/Version.sol\";\n\n/// @title Ranking Contract\n/// @author Melonport AG <team@melonport.com>\n/// @notice Reading contract to enable fund ranking\ncontract Ranking {\n\n    Version version;\n\n    function Ranking(address ofVersion) {\n        version = Version(ofVersion);\n    }\n\n    // TODO: This function will need to be updated if there are more than 1024 funds on the version\n    /// @notice Returns an array of fund addresses and an array of share price associated\n    function getFundsSharePrices() constant returns(address[1024] fundAddresses, uint[1024] fundSharePrices) {\n        uint lastId = version.getLastFundId();\n        for (uint i = 0; i <= lastId; i++) {\n            address fundAddress = version.getFundById(i);\n            FundInterface fund = FundInterface(fundAddress);\n            uint sharePrice = fund.calcSharePrice();\n            fundAddresses[i] = fundAddress;\n            fundSharePrices[i] = sharePrice;\n        }\n        return (fundAddresses, fundSharePrices);\n    }\n}\n","abiDocs":[{"constant":true,"inputs":[],"name":"getFundsSharePrices","payable":false,"stateMutability":"view","type":"function","notice":"Returns an array of fund addresses and an array of share price associated","signature":"getFundsSharePrices()","signatureHash":"58df6378"},{"inputs":[{"name":"ofVersion","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"}]}

{"author":"Melonport AG <team@melonport.com>","title":"Participation Contract","fileName":"/./src/participation/Participation.sol","name":"Participation","abi":[{"constant":false,"inputs":[{"name":"ofParticipant","type":"address"}],"name":"removeAttestation","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"ofParticipant","type":"address"}],"name":"attestForIdentity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"ofParticipant","type":"address"},{"name":"shareQuantity","type":"uint256"},{"name":"receiveQuantity","type":"uint256"}],"name":"isRedemptionPermitted","outputs":[{"name":"isEligible","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"ofParticipant","type":"address"},{"name":"giveQuantity","type":"uint256"},{"name":"shareQuantity","type":"uint256"}],"name":"isSubscriptionPermitted","outputs":[{"name":"isEligible","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"identities","outputs":[{"name":"hasUportId","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"}],"bin":"6060604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061047b806100536000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806349fa991f1461007d5780638da5cb5b146100b65780639c09c3bb1461010b578063b558f33414610144578063e158fa00146101a7578063f653b81e1461020a575b600080fd5b341561008857600080fd5b6100b4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061025b565b005b34156100c157600080fd5b6100c96102ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011657600080fd5b610142600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506102f3565b005b341561014f57600080fd5b61018d600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610365565b604051808215151515815260200191505060405180910390f35b34156101b257600080fd5b6101f0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610372565b604051808215151515815260200191505060405180910390f35b341561021557600080fd5b610241600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506103cd565b604051808215151515815260200191505060405180910390f35b6102636103f8565b80151561026f57600080fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6102fb6103f8565b80151561030757600080fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505050565b6000600190509392505050565b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1690509392505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16905081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16149050905600a165627a7a723058204e2f9b173584baacf62397cf52eff0736e970ab90c3a050e0e3e38de42b4098a0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x47B DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x49FA991F EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x9C09C3BB EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xB558F334 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0xE158FA00 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0xF653B81E EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x25B JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2F3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x3F8 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x2FB PUSH2 0x3F8 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x4e 0x2f SWAP12 OR CALLDATALOAD DUP5 0xba 0xac 0xf6 0x23 SWAP8 0xcf MSTORE 0xef CREATE PUSH20 0x6E970AB90C3A050E0E3E38DE42B4098A00290000 ","source":"pragma solidity ^0.4.17;\n\nimport '../dependencies/DBC.sol';\nimport '../dependencies/Owned.sol';\nimport './ParticipationInterface.sol';\n\n/// @title Participation Contract\n/// @author Melonport AG <team@melonport.com>\n/// @notice Example for uPort, Zug Gov, Melonport collaboration\ncontract Participation is ParticipationInterface, DBC, Owned {\n\n    // TYPES\n\n    struct Identity { // Using uPort and attestation from Zug Government\n        bool hasUportId; // Whether identiy has registered a uPort identity w Zug Gov\n        /* .. additional information\n         *   for example how much identity is eligible to invest\n         */\n    }\n\n    // FIELDS\n\n    // Methods fields\n    mapping (address => Identity) public identities;\n\n    // CONSTANT METHODS\n\n    /// @notice Checks whether subscription is permitted for a participant\n    /// @param ofParticipant Address requesting to invest in a Melon fund\n    /// @param giveQuantity Quantity of Melon token times 10 ** 18 offered to receive shareQuantity\n    /// @param shareQuantity Quantity of shares times 10 ** 18 requested to be received\n    /// @return isEligible Whether identity is eligible to invest in a Melon fund.\n    function isSubscriptionPermitted(\n        address ofParticipant,\n        uint256 giveQuantity,\n        uint256 shareQuantity\n    )\n        returns (bool isEligible)\n    {\n        isEligible = identities[ofParticipant].hasUportId; // Eligible iff has uPort identity\n    }\n\n    /// @notice Checks whether redemption is permitted for a participant\n    /// @param ofParticipant Address requesting to redeem from a Melon fund\n    /// @param shareQuantity Quantity of shares times 10 ** 18 offered to redeem\n    /// @param receiveQuantity Quantity of Melon token times 10 ** 18 requested to receive for shareQuantity\n    /// @return isEligible Whether identity is eligible to redeem from a Melon fund.\n    function isRedemptionPermitted(\n        address ofParticipant,\n        uint256 shareQuantity,\n        uint256 receiveQuantity\n    )\n        returns (bool isEligible)\n    {\n        isEligible = true; // No need for KYC/AML in case of redeeming shares\n    }\n\n    // NON-CONSTANT METHODS\n\n    /// @notice Creates attestation for a participant\n    /// @dev Maintainer of above identities mapping (== owner) can trigger this function\n    /// @param ofParticipant Address of the participant to have attested\n    function attestForIdentity(address ofParticipant)\n        pre_cond(isOwner())\n    {\n        identities[ofParticipant].hasUportId = true;\n    }\n\n    /// @notice Removes attestation for a participant\n    /// @dev Maintainer of above identities mapping (== owner) can trigger this function\n    /// @param ofParticipant Address of the participant to have attestation removed\n    function removeAttestation(address ofParticipant)\n        pre_cond(isOwner())\n    {\n        identities[ofParticipant].hasUportId = false;\n    }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"ofParticipant","type":"address","description":"Address of the participant to have attestation removed"}],"name":"removeAttestation","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Maintainer of above identities mapping (== owner) can trigger this function","notice":"Removes attestation for a participant","signature":"removeAttestation(address)","signatureHash":"49fa991f"},{"constant":true,"inputs":[],"name":"owner","payable":false,"stateMutability":"view","type":"function","signature":"owner()","signatureHash":"8da5cb5b"},{"constant":false,"inputs":[{"name":"ofParticipant","type":"address","description":"Address of the participant to have attested"}],"name":"attestForIdentity","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Maintainer of above identities mapping (== owner) can trigger this function","notice":"Creates attestation for a participant","signature":"attestForIdentity(address)","signatureHash":"9c09c3bb"},{"constant":false,"inputs":[{"name":"ofParticipant","type":"address","description":"Address requesting to redeem from a Melon fund"},{"name":"shareQuantity","type":"uint256","description":"Quantity of shares times 10 ** 18 offered to redeem"},{"name":"receiveQuantity","type":"uint256","description":"Quantity of Melon token times 10 ** 18 requested to receive for shareQuantity"}],"name":"isRedemptionPermitted","outputs":[{"name":"isEligible","type":"bool","description":"Whether identity is eligible to redeem from a Melon fund."}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isEligible Whether identity is eligible to redeem from a Melon fund.","notice":"Checks whether redemption is permitted for a participant","signature":"isRedemptionPermitted(address,uint256,uint256)","signatureHash":"b558f334"},{"constant":false,"inputs":[{"name":"ofParticipant","type":"address","description":"Address requesting to invest in a Melon fund"},{"name":"giveQuantity","type":"uint256","description":"Quantity of Melon token times 10 ** 18 offered to receive shareQuantity"},{"name":"shareQuantity","type":"uint256","description":"Quantity of shares times 10 ** 18 requested to be received"}],"name":"isSubscriptionPermitted","outputs":[{"name":"isEligible","type":"bool","description":"Whether identity is eligible to invest in a Melon fund."}],"payable":false,"stateMutability":"nonpayable","type":"function","return":"isEligible Whether identity is eligible to invest in a Melon fund.","notice":"Checks whether subscription is permitted for a participant","signature":"isSubscriptionPermitted(address,uint256,uint256)","signatureHash":"e158fa00"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"identities","payable":false,"stateMutability":"view","type":"function","signature":"identities(address)","signatureHash":"f653b81e"}]}
